import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import { useContext, useEffect, useState } from "react";
import { Router, useRouter } from "next/router";

export default function Dashboard({ AuthContext }) {
  const router = useRouter();
  const { isAuthenticated, setIsAuthenticated } = useContext(AuthContext);

  const isAuth = async () => {
    try {
      const allCookies = document.cookie.split(";");
      for (let item of allCookies) {
        if (item.startsWith("token=")) {
          localStorage.setItem("token", item.slice(6));
          break;
        }
      }
      const res = await fetch("http://localhost:5000/auth/is-verify", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          "jwt-token": localStorage.getItem("token"),
        },
      });
      const result = await res.json();
      console.log("result", result);
      result === true ? setIsAuthenticated(true) : setIsAuthenticated(false);
    } catch (err) {
      console.log("Ohno, errro");
      console.error(err.message);
    }
  };

  const getCookie = (name) => {
    return document.cookie.split(";").some((c) => {
      return c.trim().startsWith(name + "=");
    });
  };

  const deleteCookie = (name, path, domain) => {
    if (getCookie(name)) {
      document.cookie =
        name +
        "=" +
        (path ? ";path=" + path : "") +
        (domain ? ";domain=" + domain : "") +
        ";expires=Thu, 01 Jan 1970 00:00:01 GMT";
    }
  };

  const logout = async (cookieName) => {
    deleteCookie("token");
    localStorage.removeItem("token");
    setIsAuthenticated(false);
  };

  useEffect(() => {
    isAuth();
  }, []);

  useEffect(() => {
    if (!isAuthenticated) {
      router.push("auth/login");
    }
  }, [isAuthenticated]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">No Code DL!</a>
        </h1>

        <div className={styles.grid}>
          <Link href="/image-processing/projects/" className={styles.card}>
            <h2>Image Processing &rarr;</h2>
            <p>
              Create image Processing models and perform image related tasks.
            </p>
          </Link>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Text / Sequence Prototyping &rarr;</h2>
            <p>
              Lorem ipsum dolor sit, amet consectetur adipisicing elit.
              Voluptatibus.
            </p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Standard Networks &rarr;</h2>
            <p>
              Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
      <button
        className="bg-transparent hover:bg-[#0050f3] -500 text-[#0050f3] -700 font-semibold hover:text-white py-2 px-4 border border-[#0050f3] -500 hover:border-transparent rounded my-2 px-7 mb-4 ml-40"
        onClick={() => logout("token")}
      >
        Logout
      </button>
    </div>
  );
}
